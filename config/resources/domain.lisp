(in-package :mu-cl-resources)

(define-resource catalog ()
  :class (s-prefix "dcat:Catalog")
  :properties `((:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:issued :string ,(s-prefix "dct:issued"))
                (:modified :string ,(s-prefix "dct:modified"))
                (:language :string ,(s-prefix "dct:language"))
                ;;(:license :string ,(s-prefix "dct:license"))  ;ISSUE 500
                (:rights :string ,(s-prefix "dct:rights"))
                (:spatial :string ,(s-prefix "dct:spatial"))
                (:theme-taxonomy :uri ,(s-prefix "dcat:themeTaxonomy"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:homepage :string ,(s-prefix "foaf:homepage")))
  :has-one `((organization :via ,(s-prefix "dct:publisher")
                           :as "publisher")
             (catalog-record :via ,(s-prefix "dcat:record")
                             :as "record"))
  :has-many `((dataset :via ,(s-prefix "dcat:dataset")
                       :as "datasets"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Catalog/")
  :on-path "catalogs")

(define-resource dataset ()
  :class (s-prefix "dcat:Dataset")
  :properties `((:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:issued :string ,(s-prefix "dct:issued"))
                (:modified :string ,(s-prefix "dct:modified"))
                (:identifier :string ,(s-prefix "dct:identifier"))
                (:keyword :string ,(s-prefix "dcat:keyword"))
                (:language :string ,(s-prefix "dct:language"))
                (:contact-point :string ,(s-prefix "dcat:contactPoint"))
                ;;(:temporal :string ,(s-prefix "dct:temporal"))                ;ISSUE 500 here
                (:accrual-periodicity :string ,(s-prefix "dct:accrualPeriodicity"))
                (:version-info :string ,(s-prefix "owl:versionInfo"))
                (:version-notes :string ,(s-prefix "adms:versionNotes"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:provenance :string ,(s-prefix "dct:provenance"))
                (:theme :string ,(s-prefix "dct:theme"))                      ;Is this correct?
                ;;(:distribution :uri ,(s-prefix "dcat:distribution")))          ;ISSUE 500 with this
                (:landing-page :string ,(s-prefix "dcat:landingPage")))
  :has-one `((organization :via ,(s-prefix "dct:publisher")
                           :as "publisher")
             (catalog :via ,(s-prefix "dcat:dataset")
                      :inverse t
                      :as "catalog")
             (catalog-record :via ,(s-prefix "foaf:primaryTopic")
                             :inverse t
                             :as "primary-topic"))
  :has-many `((concept :via ,(s-prefix "dcat:theme")
                       :as "themes"))
  ;;(distribution :via ,(s-prefix "dcat:distribution")      ;ERROR 500 if browsing through distributions, added as URI in the properties tab
                                        ; :as "distributions"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Dataset/")
  :on-path "datasets")

                                        ;resource License Document ISSUE: ?s not existing? SELECT DISTINCT * WHERE {?s a <http://purl.org/dc/terms/LicenseDocument>.?s ?p ?o.} ORDER BY ?s -> to check
                                        ;resource Period of Time ISSUE: ?s not existing?? SELECT DISTINCT * WHERE {?s a <http://purl.org/dc/terms/PeriodOfTime>.?s ?p ?o.} ORDER BY ?s -> to check

(define-resource distribution ()
  :class (s-prefix "dcat:Distribution")
  :properties `((:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:issued :string ,(s-prefix "dct:issued"))
                (:identifier :string ,(s-prefix "dct:identifier"))
                (:modified :string ,(s-prefix "dct:modified"))
                ;;(:license :string ,(s-prefix "dct:license"))               ;ISSUE 500
                (:rights :string ,(s-prefix "dct:rights"))
                (:access-url :string ,(s-prefix "dcat:accessURL"))
                (:download-url :string ,(s-prefix "dcat:downloadURL"))
                (:media-type :string ,(s-prefix "dcat:mediaType"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:format :string ,(s-prefix "dct:format"))
                (:byte-size :string ,(s-prefix "dcat:byteSize")))
  :has-one `((dataset :via ,(s-prefix "dcat:distribution")
                      :inverse t
                      :as "dataset"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Distribution/")
  :on-path "distributions")

(define-resource catalog-record ()
  :class (s-prefix "dcat:CatalogRecord")
  :properties `((:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:issued :string ,(s-prefix "dct:issued"))
                (:modified :string ,(s-prefix "dct:modified")))
  :has-one `((catalog :via ,(s-prefix "dcat:record")
                      :inverse t
                      :as "catalog")
             (dataset :via ,(s-prefix "foaf:primaryTopic")
                      :as "primary-topic"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/CatalogRecord/")
  :on-path "catalog-records")

(define-resource concept ()
  :class (s-prefix "skos:Concept")
  :properties `((:notation :string ,(s-prefix "skos:notation"))
                (:label :string ,(s-prefix "skos:prefLabel"))
                (:definition :string ,(s-prefix "skos:definition"))
                (:note :string ,(s-prefix "skos:note"))
                (:is-part-of :string ,(s-prefix "dct:isPartOf"))
                (:alt-label :string ,(s-prefix "skos:altLabel")))
  :has-many `((concept :via ,(s-prefix "skos:broader")
                       :as "broader-concepts")
              (concept :via ,(s-prefix "skos:narrower")
                       :as "narrower-concepts"))
  :has-one `((concept-scheme :via ,(s-prefix "skos:inScheme")
                             :as "concept-scheme")
             (concept-scheme :via ,(s-prefix "skos:topConceptOf")
                             :as "top-concept-of"))	
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Concept/")
  :on-path "concepts")

(define-resource concept-scheme ()
  :class (s-prefix "skos:ConceptScheme")
  :properties `((:pref-label :string ,(s-prefix "skos:prefLabel"))
                (:label :string ,(s-prefix "rdfs:label"))
                (:is-part-of :string ,(s-prefix "dct:isPartOf"))
                (:definition :string ,(s-prefix "skos:definition")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Taxonomy/")
  :has-many `((catalog :via ,(s-prefix "dcat:themeTaxonomy")
                       :inverse t
                       :as "catalogs")
              (concept :via ,(s-prefix "skos:inScheme")
                       :inverse t
                       :as "concepts")
              (concept-scheme :via ,(s-prefix "skos:topConceptOf")
                              :as "top-concept-of")
              (concept :via ,(s-prefix "skos:hasTopConcept")
                       :as "has-top-concept"))
  :on-path "concept-schemes")

(define-resource agent ()
  :class (s-prefix "foaf:Agent")
  :has-many `((catalog :via ,(s-prefix "dct:publisher")
                       :inverse t
                       :as "catalogs")
              (dataset :via ,(s-prefix "dct:publisher")
                       :inverse t
                       :as "datasets"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Agent/")
  :on-path "agents")

(define-resource aid-activity ()
  :class (s-prefix "elod:AidActivity")
  :properties `((:project-id :string ,(s-prefix "elod:projectId"))
                (:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:start-date :datetime ,(s-prefix "elod:startDate")) 
                (:end-date :datetime ,(s-prefix "elod:endDate"))    
                (:planned-start-date :datetime ,(s-prefix "elod:plannedStartDate")) 
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:planned-end-date :datetime ,(s-prefix "elod:plannedEndDate")))
  :has-one `((concept :via ,(s-prefix "elod:aidType")
                      :as "aid-type")
             (organization :via ,(s-prefix "elod:benefactor")
                           :as "benefactor")
             (organization :via ,(s-prefix "elod:beneficiary")
                           :as "beneficiary")
             (concept :via ,(s-prefix "elod:sector")
                      :as "sector")
             (concept :via ,(s-prefix "elod:activityStatusType")						
                      :as "activity-status-type")
             (concept :via ,(s-prefix "elod:collaborationType")						
                      :as "collaboration-type")
             (concept :via ,(s-prefix "elod:financeType")								
                      :as "finance-type")
             (concept :via ,(s-prefix "elod:flowType")								
                      :as "flow-type")
             (disbursed-item :via ,(s-prefix "elod:hasRelatedDisbursedItem")
                             :as "total-disbursement")
             (concept :via ,(s-prefix "elod:countryIsoCode")									
                      :as "country")
             (concept :via ,(s-prefix "elod:regionCode")									
                      :as "region"))
  :has-many `((committed-item :via ,(s-prefix "elod:hasRelatedCommittedItem")
                              :as "total-commitment")
              (transaction :via ,(s-prefix "elod:hasTransaction")
                           :as "transaction"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/AidActivity/")
  :on-path "aid-activities")

(define-resource organization ()
  :class (s-prefix "foaf:Organization")
  :properties `((:reference-code :string ,(s-prefix "elod:refCode"))
                (:vat-id :string ,(s-prefix "gr:vatID"))
                (:legal-name :string ,(s-prefix "gr:legalName"))
                (:vat-id :string ,(s-prefix "gr:vatId"))
                (:name :string ,(s-prefix "gr:name"))
                (:translation :string ,(s-prefix "elod:translation"))
                (:org-name :string ,(s-prefix "foaf:name"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:pref-label :string ,(s-prefix "skos:prefLabel"))
                (:close-match :uri ,(s-prefix "skos:closeMatch"))
                (:is-matched :boolean ,(s-prefix "elod:isMatched"))
                (:see-also :uri ,(s-prefix "rdfs:seeAlso")))
  :has-one `((concept :via ,(s-prefix "rov:orgType")
                      :as "organization-type")
             (concept :via ,(s-prefix "elod:countryIsoCode")
                      :as "country")
             (concept :via ,(s-prefix "pc:authorityKind")
                      :as "authority-kind")	
             (concept :via ,(s-prefix "dct:type")
                      :as "type")	
             (address :via ,(s-prefix "vcard:hasAddress")
                      :as "address"))
  :has-many `((organizational-unit :via ,(s-prefix "org:hasUnit")
                                   :as "organizational-units"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Organization/")					
  :on-path "organizations")

(define-resource public-project ()
  :class (s-prefix "elod:PublicProject")
  :properties `((:project-id :string ,(s-prefix "elod:projectId"))
                (:title :language-string-set ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:completion :string ,(s-prefix "elod:completion"))
                (:number-of-related-projects :string ,(s-prefix "elod:countOfRelatedProjects"))
                (:number-of-related-decisions :string ,(s-prefix "elod:countOfRelatedDecisions"))
                (:number-of-related-contracts :string ,(s-prefix "elod:countOfRelatedContracts"))
                (:issued :datetime ,(s-prefix "dct:issued"))
                (:start-date :string ,(s-prefix "elod:startDate"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:modified :datetime ,(s-prefix "dct:modified"))
                (:completion-of-payments :string ,(s-prefix "elod:completionOfPayments"))
                (:completion-contracts :string ,(s-prefix "elod:completionOfContracts"))
                (:end-date :string ,(s-prefix "elod:endDate")))
  :has-one `((price-specification :via ,(s-prefix "elod:price")
                                  :as "price")
             (organization :via ,(s-prefix "elod:beneficiary")
                           :as "beneficiary")
             (aggregate :via ,(s-prefix "elod:hasAggregate") ; no uuid
                        :as "aggregate")
             ;;(region :via ,(s-prefix "elod:hasRegion") ; no uuid new concept?? f.e http://143.233.226.60:8890/describe/?url=http://linkedeconomy.org/resource/Region/7
                                        ; :as "region")
             (concept :via ,(s-prefix "elod:hasOperationalCode") ; no uuid
                      :as "operational-code")			 
             (place-of-interest :via ,(s-prefix "elod:hasRelatedFeature")
                                :as "place-of-interest")	
             (concept :via ,(s-prefix "elod:hasProjectStatus") ;no uuid
                      :as "project-status")
             (organization :via ,(s-prefix "elod:buyer")
                           :as "buyer")		
             (aggregate :via ,(s-prefix "elod:hasBudgetAggregate")
                        :as "budget-aggregate")	
             (municipality :via ,(s-prefix "elod:subsidyMunicipality")
                           :as "municipality"))
  :has-many `((subproject :via ,(s-prefix "elod:hasRelatedProject")
                          :as "related-projects")
              (spending-item :via ,(s-prefix "elod:hasRelatedSpendingItem")
                             :as "spending-items")
              (budget-item :via ,(s-prefix "elod:hasRelatedBudgetItem")
                           :as "budget-items")
              (contract :via ,(s-prefix "elod:hasRelatedContract")
                        :as "related-contract")
              (decision :via ,(s-prefix "elod:hasRelatedAdministrativeDecision")
                        :as "related-administrative-decision")
              (concept :via ,(s-prefix "elod:sector")                                 
                       :as "sector")
              (concept :via ,(s-prefix "elod:countryIsoCode")
                       :as "country"))
  ;;(ISSUE "elod:hasRelatedAdministrativeDecision, but this concept has multiple types (7 to be precise)") SELECT DISTINCT ?t WHERE {?s a <http://linkedeconomy.org/ontology#PublicProject>. ?s <http://linkedeconomy.org/ontology#hasRelatedAdministrativeDecision> ?o. ?o a ?t} ORDER BY ?s
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/PublicProject/")
  :on-path "public-projects")

(define-resource subproject ()
  :class (s-prefix "elod:Subproject")
  :properties `((:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:issued :datetime ,(s-prefix "dct:issued"))
                (:start-date :datetime ,(s-prefix "elod:startDate"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:end-date :datetime ,(s-prefix "elod:endDate")))
  :has-one `((budget-item :via ,(s-prefix "elod:hasRelatedBudgetItem")
                          :as "related-budget-item")
             (budget-item :via ,(s-prefix "elod:hasRelatedAdministrativeDecision")
                          :as "related-administrative-decision"))
  :has-many `((organization :via ,(s-prefix "elod:seller")
                            :as "sellers"))		
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Subproject/")
  :on-path "subprojects")

(define-resource spending-item ()
  :class (s-prefix "elod:SpendingItem")
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-type :string ,(s-prefix "elod:documentType"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:seller-criteria :string ,(s-prefix "elod:sellerCriteria"))
                (:subject-criteria :string ,(s-prefix "elod:subjectCriteria"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId"))
                (:refers-to :string ,(s-prefix "elod:refersTo")))	
  :has-one `((organization :via ,(s-prefix "elod:buyer")
                           :as "buyer")
             (concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (expenditure-line :via ,(s-prefix "elod:hasExpenditureLine")
                               :as "expenditure-line")
             (concept :via ,(s-prefix "elod:hasThematicCategory")
                      :as "thematic-category")	
             ;;(signer :via ,(s-prefix "elod:signer") ;no data, no types
                                        ;:as "signer")					 
             (organization :via ,(s-prefix "dct:publisher")
                           :as "publisher"))		
  :has-many `((committed-item :via ,(s-prefix "elod:hasRelatedCommittedItem")
                              :as "committed-item")
              (expense-approval-item :via ,(s-prefix "elod:hasRelatedExpenseApprovalItem")
                                     :as "expense-approval-item")
              (contract :via ,(s-prefix "elod:hasRelatedContract")
                        :as "related-contract")
              (spending-item :via ,(s-prefix "elod:hasRelatedSpendingItem")       ;hasrelatedspendingitem has multiple types linked to it
                             :as "related-spending-item")	
              (decision :via ,(s-prefix "elod:hasRelatedDecision")
                        :as "related-decision"))							
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/SpendingItem/")
  :on-path "spending-items")

(define-resource budget-item ()
  :class (s-prefix "elod:BudgetItem")
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((price-specification :via ,(s-prefix "elod:price")
                                  :as "price"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/BudgetItem/")
  :on-path "budget-items")

(define-resource expenditure-line ()
  :class (s-prefix "elod:ExpenditureLine")
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))  
  :has-one `((price-specification :via ,(s-prefix "elod:amount")
                                  :as "price")
             (concept :via ,(s-prefix "elod:hasCpv")
                      :as "cpv-code")
             (kae-code :via ,(s-prefix "elod:hasKae")
                       :as "kae-code")
             (organization :via ,(s-prefix "elod:seller")
                           :as "seller")
             (price-specification :via ,(s-prefix "elod:remainingBudgetAmount")
                                  :as "remaining-budget-amount")
             (price-specification :via ,(s-prefix "elod:remainingCreditAmount")
                                  :as "remaining-credit-amount")
             (concept :via ,(s-prefix "elod:transactionType")
                      :as "transaction-type"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/ExpenditureLine/")
  :on-path "expenditure-lines")

(define-resource price-specification ()
  :class (s-prefix "gr:UnitPriceSpecification")
  :properties `((:value :string ,(s-prefix "gr:hasCurrencyValue"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:vat :boolean ,(s-prefix "gr:valueAddedTaxIncluded")))
  :has-one `((concept :via ,(s-prefix "elod:hasCurrency")
                      :as "currency"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/PriceSpecification/")
  :on-path "price-specifications")

(define-resource amount ()
  :class (s-prefix "elod:Amount")
  :properties `((:value :string ,(s-prefix "elod:hasCurrencyValue"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:vat :boolean ,(s-prefix "elod:valueAddedTaxIncluded")))
  :has-one `((concept :via ,(s-prefix "elod:hasCurrency")
                      :as "currency"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Amount/")
  :on-path "amounts")

(define-resource kae-code ()
  :class (s-prefix "elod:KAE")
  :properties `((:KAE :string ,(s-prefix "elod:kae"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/KAE/")
  :on-path "kae-codes")

(define-resource address ()
  :class (s-prefix "vcard:Address")
  :properties `((:street-address :string ,(s-prefix "vcard:street-address"))
                (:postal-code :string ,(s-prefix "vcard:postal-code"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:locality :string ,(s-prefix "vcard:locality")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Address/")
  :on-path "addresses")

(define-resource expense-approval-item ()
  :class (s-prefix "elod:ExpenseApprovalItem") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId"))
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-type :string ,(s-prefix "elod:documentType"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:seller-criteria :boolean ,(s-prefix "elod:sellerCriteria"))
                (:subject-criteria :boolean ,(s-prefix "elod:subjectCriteria"))
                (:decision-type :string ,(s-prefix "elod:decisionType")))
  :has-one `((organization :via ,(s-prefix "elod:buyer")
                           :as "buyer")
             (concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (expense-approval-item :via ,(s-prefix "elod:hasCorrectedDecision")
                                    :as "corrected-decision")			 
             (expenditure-line :via ,(s-prefix "elod:hasExpenditureLine")
                               :as "expenditure-line")
             (attachment :via ,(s-prefix "elod:hasAttachment")
                         :as "attachment")
             (committed-item :via ,(s-prefix "elod:hasRelatedCommittedItem") ;Concept has multiple types
                             :as "committed-items")
             (expense-approval-item :via ,(s-prefix "elod:hasRelatedExpenseApprovalItem")  ;multiple types linked to it
                                    :as "related-expense-approval-item")
             ;;(signer :via ,(s-prefix "elod:signer") ;no data, no types
                                        ; :as "signer") 					 
             (organization :via ,(s-prefix "dct:publisher") 
                           :as "publisher"))
  :has-many `((decision :via ,(s-prefix "elod:hasRelatedDecision")
                        :as "related-decision")
              (contract :via ,(s-prefix "elod:hasRelatedContract")
                        :as "related-contract")
              (concept :via ,(s-prefix "elod:hasThematicCategory")
                       :as "thematic-category"))									 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/ExpenseApprovalItem/")
  :on-path "expense-approval-items")

(define-resource financial-decision ()
  :class (s-prefix "elod:FinancialDecision") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))				
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-type :string ,(s-prefix "elod:documentType"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:entry-number :string ,(s-prefix "elod:entryNumber"))
                (:financial-year :g-year ,(s-prefix "elod:financialYear"))
                (:partial-withdrawal :boolean ,(s-prefix "elod:isPartialWithdrawal"))
                (:recalled-expense-decision :boolean ,(s-prefix "elod:isRecalledExpenseDecision"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:seller-criteria :string ,(s-prefix "elod:sellerCriteria"))
                (:subject-criteria :string ,(s-prefix "elod:subjectCriteria"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:refers-to :string ,(s-prefix "elod:refersTo"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId")))
  :has-one `((organization :via ,(s-prefix "elod:buyer")
                           :as "buyer")
             (concept :via ,(s-prefix "elod:hasBudgetCategory")
                      :as "budget-category")
             (concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (expenditure-line :via ,(s-prefix "elod:hasExpenditureLine")
                               :as "expenditure-line")
             (attachment :via ,(s-prefix "elod:hasAttachment")
                         :as "attachment")
             (expense-approval-item :via ,(s-prefix "elod:hasRelatedExpenseApprovalItem")  ;Multiple types linked to it
                                    :as "related-expense-approval-item")			 
             (concept :via ,(s-prefix "elod:hasThematicCategory")
                      :as "thematic-category")
             (price-specification :via ,(s-prefix "elod:price")
                                  :as "price")
             ;;(signer :via ,(s-prefix "elod:signer") ;no data and no type linked to it
                                        ; :as "signer")
             (organization :via ,(s-prefix "dct:publisher")
                           :as "publisher")
             (price-specification :via ,(s-prefix "pc:agreedPrice")
                                  :as "agreed-price")
             (organization :via ,(s-prefix "elod:seller")
                           :as "seller")
             (price-specification :via ,(s-prefix "pc:documentsPrice")
                                  :as "documents-price")
             (concept :via ,(s-prefix "pc:mainObject")
                      :as "main-object")
             (price-specification :via ,(s-prefix "pc:actualPrice")
                                  :as "actual-price")
             (award-criteria-combination :via ,(s-prefix "pc:awardCriteriaCombination")
                                         :as "award-criteria-combination")
             (concept :via ,(s-prefix "pc:procedureType")
                      :as "procedure-type")
             (price-specification :via ,(s-prefix "pc:estimatedPrice")
                                  :as "estimated-price")
             (concept :via ,(s-prefix "pc:kind")
                      :as "kind"))
  :has-many `((committed-item :via ,(s-prefix "elod:hasRelatedCommittedItem") ;Concept has multiple types
                              :as "committed-items")
              (financial-decision :via ,(s-prefix "elod:hasRelatedContract") 
                                  :as "related-contracts")
              (decision :via ,(s-prefix "elod:hasRelatedDecision") 
                        :as "related-decisions")		
              (spending-item :via ,(s-prefix "elod:hasRelatedSpendingItem")
                             :as "related-spending-items")
              (concept :via ,(s-prefix "pc:additionalObject")
                       :as "additional-object"))	 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/FinancialDecision/")
  :on-path "financial-decisions")

(define-resource committed-item ()
  :class (s-prefix "elod:CommittedItem") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId"))
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-type :string ,(s-prefix "elod:documentType"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:financial-year :g-year ,(s-prefix "elod:financialYear"))
                (:entry-number :string ,(s-prefix "elod:entryNumber"))
                (:partial-withdrawal :boolean ,(s-prefix "elod:isPartialWithdrawal"))
                (:recalled-expense-decision :boolean ,(s-prefix "elod:isRecalledExpenseDecision"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:seller-criteria :boolean ,(s-prefix "elod:sellerCriteria"))
                (:subject-criteria :boolean ,(s-prefix "elod:subjectCriteria"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:refers-to :string ,(s-prefix "elod:refersTo")))		
  :has-one `((concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (concept :via ,(s-prefix "elod:hasBudgetCategory")
                      :as "budget-category")
             (expenditure-line :via ,(s-prefix "elod:hasExpenditureLine")
                               :as "expenditure-line")
             (concept :via ,(s-prefix "elod:hasThematicCategory")
                      :as "thematic-category")
             (price-specification :via ,(s-prefix "elod:price")
                                  :as "price")
             (amount :via ,(s-prefix "elod:amount")
                     :as "amount")
             (decision :via ,(s-prefix "elod:hasRelatedDecision")
                       :as "related-decision")
             (contract :via ,(s-prefix "elod:hasRelatedContract")
                       :as "related-contract")
             (committed-item :via ,(s-prefix "elod:hasCorrectedDecision")
                             :as "corrected-decision")	
             ;;(signer :via ,(s-prefix "elod:signer") ;no data, no type
                                        ; :as "signer")
             (organization :via ,(s-prefix "dct:publisher")
                           :as "publisher"))						
  :has-many `((committed-item :via ,(s-prefix "elod:hasRelatedCommittedItem")		;Concepts have multiple types
                              :as "related-committed-items"))     		
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/CommittedItem/")
  :on-path "committed-items")

(define-resource subsidy ()
  :class (s-prefix "elod:Subsidy") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:street-address :string ,(s-prefix "vcard:street-address"))
                (:end-date :string ,(s-prefix "elod:endDate"))
                (:start-date :string ,(s-prefix "elod:startDate"))
                (:completion :string ,(s-prefix "elod:completion"))
                (:number-of-related-projects :string ,(s-prefix "elod:countOfRelatedProjects"))
                (:project-id :string ,(s-prefix "elod:projectId"))
                (:title :string ,(s-prefix "dct:title"))
                (:description :string ,(s-prefix "dct:description"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:postal-code :string ,(s-prefix "vcard:postal-code")))
  :has-one `((spending-item :via ,(s-prefix "elod:hasRelatedSpendingItem")
                            :as "spending-items")
             (price-specification :via ,(s-prefix "elod:price")
                                  :as "price")
             (budget-item :via ,(s-prefix "elod:hasRelatedBudgetItem")
                          :as "budget-items")
             (organization :via ,(s-prefix "elod:beneficiary")
                           :as "beneficiary")
             (concept :via ,(s-prefix "elod:sector")                                 
                      :as "sector")
             (concept :via ,(s-prefix "elod:countryIsoCode")                                 
                      :as "country"))
  :has-many `((subproject :via ,(s-prefix "elod:hasRelatedProject")
                          :as "related-projects")
              (place-of-interest :via ,(s-prefix "elod:hasRelatedFeature")
                                 :as "places-of-interest")
              (decision :via ,(s-prefix "elod:hasRelatedAdministrativeDecision") ;has multiple types
                        :as "related-administrative-decision")
              (municipality :via ,(s-prefix "elod:subsidyMunicipality")
                            :as "municipality"))		
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Subsidy/")
  :on-path "subsidies")

(define-resource contract ()
  :class (s-prefix "pc:Contract") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId"))
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-type :string ,(s-prefix "elod:documentType"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:risk-error :boolean ,(s-prefix "elod:riskError"))
                (:title :string ,(s-prefix "dct:title"))
                (:contract-id :string ,(s-prefix "elod:contractId"))
                (:award-date :datetime ,(s-prefix "pc:awardDate"))
                (:has-nuts-code :uri ,(s-prefix "elod:hasNutsCode"))
                (:actual-end-date :datetime ,(s-prefix "pc:actualEndDate"))
                ;;(:related-decisions :string ,(s-prefix "elod:countOfRelatedDecisions"))
                (:financial-year :g-year ,(s-prefix "elod:financialYear"))
                (:number-of-tenders :number ,(s-prefix "pc:numberOfTenders")) ;integer cannot be used
                ;;(:duration :number ,(s-prefix "pc:duration"))
                (:estimated-end-date :datetime ,(s-prefix "pc:estimatedEndDate"))
                (:start-date :datetime ,(s-prefix "pc:startDate"))
                (:tender-deadline :datetime ,(s-prefix "pc:tenderDeadline"))
                (:document-type :string ,(s-prefix "elod:documentType"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:seller-criteria :string ,(s-prefix "elod:sellerCriteria"))
                (:subject-criteria :string ,(s-prefix "elod:subjectCriteria"))
                (:refers-to :string ,(s-prefix "elod:refersTo")))
  :has-one `((price-specification :via ,(s-prefix "pc:agreedPrice")
                                  :as "agreed-price")
             (organization :via ,(s-prefix "elod:buyer")
                           :as "buyer")
             (organizational-unit :via ,(s-prefix "elod:buyer")
                                  :as "buyer")			 
             (concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (contract :via ,(s-prefix "elod:hasCorrectedDecision")
                       :as "corrected-decision")
             (concept :via ,(s-prefix "elod:hasBudgetCategory")
                      :as "budget-category")
             (attachment :via ,(s-prefix "elod:hasAttachment")
                         :as "attachment")
             (concept :via ,(s-prefix "elod:hasThematicCategory")
                      :as "thematic-category")
             (organization :via ,(s-prefix "elod:seller")
                           :as "seller")
             ;;(signer :via ,(s-prefix "elod:signer") ;no data, no type
                                        ; :as "signer")					 
             (concept :via ,(s-prefix "pc:kind")    
                      :as "kind")	
             (contract :via ,(s-prefix "elod:awardConcernsNotice")    
                       :as "award-concerns-notice")	
             (concept :via ,(s-prefix "pc:mainObject")
                      :as "main-object")
             (price-specification :via ,(s-prefix "pc:documentsPrice")
                                  :as "documents-price")
             (price-specification :via ,(s-prefix "elod:price")
                                  :as "price")
             (price-specification :via ,(s-prefix "pc:actualPrice")
                                  :as "actual-price")
             (price-specification :via ,(s-prefix "pc:estimatedPrice")
                                  :as "estimated-price")
             (organizational-unit :via ,(s-prefix "dct:publisher") 
                                  :as "publisher")
             (expense-approval-item :via ,(s-prefix "elod:hasRelatedExpenseApprovalItem")
                                    :as "related-expense-approval-item")	
             (award-criteria-combination :via ,(s-prefix "pc:awardCriteriaCombination")
                                         :as "award-criteria-combination")		
             (concept :via ,(s-prefix "pc:procedureType")
                      :as "procedure-type"))
  :has-many `((concept :via ,(s-prefix "pc:additionalObject")
                       :as "additional-objects")
              (contract :via ,(s-prefix "elod:hasRelatedContract")
                        :as "related-contract")
              (decision :via ,(s-prefix "elod:hasRelatedDecision")
                        :as "related-decision")
              (decision :via ,(s-prefix "elod:hasRelatedAdministrativeDecision") ;has multiple types
                        :as "administrative-decision")	
              (committed-item :via ,(s-prefix "elod:hasRelatedCommittedItem") 
                              :as "related-committed-item"))							
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Contract/")
  :on-path "contracts")

(define-resource decision ()
  :class (s-prefix "elod:Decision") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId"))
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:financial-year :g-year ,(s-prefix "elod:financialYear"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:refers-to :string ,(s-prefix "elod:refersTo"))
                (:cofinanced-project :boolean ,(s-prefix "elod:coFinancedProject"))
                (:budget-approval-for-organisation :boolean ,(s-prefix "elod:budgetApprovalForOrg"))
                (:account-approval-for-other-organisation :boolean ,(s-prefix "elod:accountApprovalForOtherOrg")))
  :has-one `((concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (decision :via ,(s-prefix "elod:hasCorrectedDecision")
                       :as "decision")	
             (expenditure-line :via ,(s-prefix "elod:hasExpenditureLine")
                               :as "expenditure-line")
             (organization :via ,(s-prefix "elod:seller")
                           :as "seller")
             ;;(signer :via ,(s-prefix "elod:signer") ;no data
                                        ; :as "signer")
             (organization :via ,(s-prefix "dct:publisher") ;multiple types
                           :as "publisher")
             (collective-body-kind :via ,(s-prefix "elod:collectiveBodyKind")
                                   :as "collective-body-kind")
             (collective-body-type :via ,(s-prefix "elod:collectiveBodyType")
                                   :as "collective-body-type")
             (regulatory-act :via ,(s-prefix "elod:regulatoryAct")
                             :as "regulatory-act")
             (fek :via ,(s-prefix "elod:relatedFek")
                  :as "related-fek")
             (official-administrative-change :via ,(s-prefix "elod:hasOfficialAdministrativeChange")
                                             :as "official-administrative-change")
             (concept :via ,(s-prefix "elod:hasBudgetKind")
                      :as "budget-kind")
             (concept :via ,(s-prefix "elod:accountType")
                      :as "account-type")
             (concept :via ,(s-prefix "elod:timePeriod")
                      :as "time-period"))
  :has-many `((concept :via ,(s-prefix "elod:hasThematicCategory") ;has multiple types
                       :as "thematic-category"))		 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Decision/")
  :on-path "decisions")

(define-resource fek ()
  :class (s-prefix "elod:Fek")
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Fek/")
  :on-path "feks")

(define-resource official-administrative-change ()
  :class (s-prefix "elod:OfficialAdministrativeChange")
  :properties `((:label :string, (s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/OfficialAdministrativeChange/")
  :on-path "official-administrative-changes")

(define-resource non-financial-decision ()
  :class (s-prefix "elod:NonFinancialDecision") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:refers-to :string ,(s-prefix "elod:refersTo"))
                (:cofinanced-project :boolean ,(s-prefix "elod:coFinancedProject"))
                (:budget-approval-for-organisation :boolean ,(s-prefix "elod:budgetApprovalForOrg"))
                (:financial-year :g-year ,(s-prefix "elod:financialYear"))
                (:subject-criteria :integer ,(s-prefix "elod:subjectCriteria"))
                (:seller-criteria :integer ,(s-prefix "elod:sellerCriteria"))
                (:account-approval-for-other-organisation :boolean ,(s-prefix "elod:accountApprovalForOtherOrg")))
  :has-one `((concept :via ,(s-prefix "elod:decisionStatus")
                      :as "decision-status")
             (attachment :via ,(s-prefix "elod:hasAttachment")
                         :as "attachment")		 
             ;;(signer :via ,(s-prefix "elod:signer")   ;no data
                                        ; :as "signer")			 
             (organization :via ,(s-prefix "dct:publisher")  ;organizational unit has no data, multiple types
                           :as "publisher"))	
  :has-many `((concept :via ,(s-prefix "elod:hasThematicCategory")  ;has multiple types
                       :as "thematic-category"))			 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/NonFinancialDecision/")
  :on-path "non-financial-decisions")

(define-resource group-national-agent () 
  :class (s-prefix "elod:GroupNationalAgent") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((concept :via ,(s-prefix "elod:countryIsoCode")
                      :as "country"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/GroupNationalAgent/")
  :on-path "group-national-agents")

(define-resource trade-activity ()
  :class (s-prefix "elod:TradeActivity") 
  :properties `((:financial-year :g-year ,(s-prefix "elod:financialYear"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((concept :via ,(s-prefix "elod:concerns")
                      :as "concerns")
             (group-national-agent :via ,(s-prefix "elod:hasOrigin")
                                   :as "origin")
             (group-national-agent :via ,(s-prefix "elod:hasDestination")
                                   :as "destination")
             (amount :via ,(s-prefix "elod:amount")
                     :as "amount"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/TradeActivity/")
  :on-path "trade-activities")

;;(define-resource decision-status ()
                                        ; :class (s-prefix "skos:Concept") 
                                        ; :properties `((:label :string, (s-prefix "skos:prefLabel")))
                                        ; :features '(include-uri)
;; :resource-base (s-url "http://linkedeconomy.org/resource/DecisionStatus/")
                                        ; :on-path "decision-statuses")

;;(define-resource thematic-category ()
                                        ; :class (s-prefix "skos:Concept") 
                                        ; :properties `((:label :string, (s-prefix "skos:prefLabel"))
;;(:is-part-of :uri ,(s-prefix "dct:isPartOf")))
                                        ; :features '(include-uri)
;; :resource-base (s-url "http://linkedeconomy.org/resource/ThematicCategory/")
                                        ; :on-path "thematic-categories")

;;(define-resource budget-category ()
                                        ; :class (s-prefix "skos:Concept") 
                                        ; :properties `((:label :string, (s-prefix "skos:prefLabel")))
                                        ; :features '(include-uri)
;; :resource-base (s-url "http://linkedeconomy.org/resource/BudgetCategory/")
                                        ; :on-path "budget-categories")    

(define-resource collective-body-kind ()
  :class (s-prefix "skos:Concept") 
  :properties `((:label :string, (s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/CollectiveBodyKind/")
  :on-path "collective-body-kinds") 

(define-resource collective-body-type ()
  :class (s-prefix "skos:Concept") 
  :properties `((:label :string, (s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/CollectiveBodyType/")
  :on-path "collective-body-types") 

(define-resource regulatory-act ()
  :class (s-prefix "elod:RegulatoryAct") 
  :properties `((:label :string, (s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/RegulatoryAct/")
  :on-path "regulatory-acts") 

(define-resource selection-criterion ()
  :class (s-prefix "skos:Concept") 
  :properties `((:label :string, (s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/SelectionCriterion/")
  :on-path "selection-criteria") 

(define-resource place-of-interest ()
  :class (s-prefix "elod:PlaceOfInterest") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-many `((point :via ,(s-prefix "geosparql:hasGeometry")
                     :as "point-geometries")
              (line-string :via ,(s-prefix "geosparql:hasGeometry")
                           :as "line-geometries")
              (subsidy :via ,(s-prefix "elod:hasRelatedFeature")
                       :inverse t
                       :as "subsidies"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/PlaceOfInterest/")
  :on-path "places-of-interest") 

(define-resource point ()
  :class (s-prefix "sf:Point")
                                        ; :has-many `((place-of-interest :via ,(s-prefix "geosparql:hasGeometry")
                                        ; :inverse t
                                        ; :as "places-of-interest"))
  :properties `((:coordinates :geometry, (s-prefix "geosparql:asWKT"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Point/")
  :on-path "points") 

(define-resource line-string ()
  :class (s-prefix "sf:LineString") 
  :properties `((:coordinates :geometry, (s-prefix "geosparql:asWKT"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
                                        ; :has-many `((place-of-interest :via ,(s-prefix "geosparql:hasGeometry")
                                        ; :inverse t
                                        ; :as "places-of-interest"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/LineString/")
  :on-path "line-strings") 

(define-resource account-type ()
  :class (s-prefix "skos:Concept") 
  :properties `((:label :string, (s-prefix "skos:prefLabel")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/AccountType/")
  :on-path "account-types") 

(define-resource fek-type ()
  :class (s-prefix "elod:FekType") 
  :properties `((:label :string, (s-prefix "skos:prefLabel"))
                (:fek-type-id :string, (s-prefix "elod:fekTypeId")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/FekType/")
  :on-path "fek-types") 

(define-resource award-criteria-combination ()                                                     
  :class (s-prefix "pc:AwardCriteriaCombination") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-many `((criterion-weighting :via ,(s-prefix "pc:awardCriterion")
                                   :as "award-criteria"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/AwardCriteriaCombination/")
  :on-path "award-criteria-combinations") 

(define-resource criterion-weighting ()                												
  :class (s-prefix "pc:CriterionWeighting")
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))  
  ;;(:criterion-weight :percentage, (s-prefix "pc:criterionWeight")))			;issue 500 this line causes it
  :has-one `((concept :via ,(s-prefix "pc:weightedCriterion")
                      :as "weighted-criterion"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/CriterionWeighting/")
  :on-path "criteria-weighting") 

;;(define-resource registered-organization ()                									    ;refers to Organization
                                        ; :class (s-prefix "rov:RegisteredOrganization") 
                                        ; :properties `((:name :string, (s-prefix "foaf:name"))
;;(:reference-code :string, (s-prefix "elod:refCode")))
                                        ; :has-one `((concept :via ,(s-prefix "rov:orgType")                                                    
					; :as "organization-type"))
                                        ; :features '(include-uri)
;; :resource-base (s-url "http://linkedeconomy.org/resource/RegisteredOrganization/")
                                        ; :on-path "registered-organizations") 

;;(define-resource business-entity ()                												;refers to Organization
                                        ; :class (s-prefix "gr:BusinessEntity") 
                                        ; :properties `((:name :string, (s-prefix "foaf:name"))
;;(:reference-code :string, (s-prefix "elod:refCode")))
                                        ; :has-one `((concept :via ,(s-prefix "rov:orgType")                                                    
					; :as "organization-type")
;;(concept :via ,(s-prefix "elod:countryIsoCode")                                                    
					; :as "country"))
                                        ; :features '(include-uri)
;; :resource-base (s-url "http://linkedeconomy.org/resource/BusinessEntity/")
                                        ; :on-path "business-entities") 

(define-resource transaction ()                												
  :class (s-prefix "elod:Transaction") 
  :properties `((:currency-value :string ,(s-prefix "elod:hasCurrencyValue"))
                (:transaction-date :datetime ,(s-prefix "elod:transactionDate"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:value-date :datetime ,(s-prefix "elod:valueDate")))
  :has-one `((concept :via ,(s-prefix "elod:transactionType")
                      :as "transaction-type")
             ;;(concept :via, (s-prefix "elod:hasCurrency")
                                        ; :as "currency")
             (amount :via, (s-prefix "elod:amount")
                     :as "amount"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Transaction/")
  :on-path "transactions") 

(define-resource disbursed-item ()                												
  :class (s-prefix "elod:DisbursedItem") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((amount :via ,(s-prefix "elod:amount")                                                    
                     :as "amount"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/DisbursedItem/")
  :on-path "disbursed-items") 

(define-resource statistical-indicator ()                												
  :class (s-prefix "elod:StatisticalIndicator") 
  :properties `((:financial-year :g-year, (s-prefix "elod:financialYear"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:value :string, (s-prefix "elod:hasValue")))
  :has-one `((concept :via ,(s-prefix "elod:concerns")                                                    
                      :as "concerns"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/StatisticalIndicator/")
  :on-path "statistical-indicators") 

(define-resource municipality ()                												
  :class (s-prefix "elodgeo:Municipality") 
  :properties `((:name :string, (s-prefix "elodgeo:name"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))) ;Missing
  :has-many `((postal-code-area :via ,(s-prefix "elodgeo:hasPart")                                                    
                                :as "postal-code-areas"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Municipality/")
  :on-path "municipalities") 

(define-resource postal-code-area ()                												
  :class (s-prefix "elodgeo:PostalCodeArea") 
  :properties `((:postal-code :string, (s-prefix "elodgeo:postalCode"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))) ;missing
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/PostalCodeArea/")
  :on-path "postal-code-areas") 

(define-resource decision ()
  :class (s-prefix "elod:Decision") 
  :properties `((:issued :datetime ,(s-prefix "dct:issued"))
                (:ada :string ,(s-prefix "elod:ada"))				
                (:decision-type-id :string ,(s-prefix "elod:decisionTypeId"))
                (:document-url :string ,(s-prefix "elod:documentUrl"))
                (:private-data :boolean ,(s-prefix "elod:privateData"))
                (:protocol-number :string ,(s-prefix "elod:protocolNumber"))
                (:submission-timestamp :datetime ,(s-prefix "elod:submissionTimestamp"))
                (:version-id :string ,(s-prefix "elod:versionId"))
                (:subject :value ,(s-prefix "dct:subject"))
                (:subject-criteria :value ,(s-prefix "elod:subjectCriteria"))
                (:seller-criteria :value ,(s-prefix "elod:sellerCriteria"))
                (:decision-type :string ,(s-prefix "elod:decisionType"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:corrected-version-id :string ,(s-prefix "elod:correctedVersionId")))
  :has-one `((concept :via ,(s-prefix "elod:decisionStatus") ; multiple types
                      :as "decision-status")	 
             (concept :via ,(s-prefix "elod:hasThematicCategory")  ;multiple types
                      :as "thematic-category")
             (attachment :via ,(s-prefix "elod:hasAttachment")
                         :as "attachment")
             ;;(signer :via ,(s-prefix "elod:signer") ;no data and no type linked to it (still the case 14/04/2017)
                                        ; :as "signer")
             (organizational-unit :via ,(s-prefix "dct:publisher")
                                  :as "publisher"))				 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Decision/")
  :on-path "decisions")

(define-resource organizational-unit ()
  :class (s-prefix "org:OrganizationalUnit")  
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((country :via ,(s-prefix "elod:countryIsoCode")
                      :as "country"))  
  :has-many `((organizational-unit :via ,(s-prefix "org:hasUnit")
                                   :as "has-units"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/OrganizationalUnits/")
  :on-path "organizational-units")

(define-resource person ()
  :class (s-prefix "foaf:Person")
  :properties `((:legal-name :string ,(s-prefix "gr:legalName"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                (:pref-label :uri ,(s-prefix "skos:prefLabel"))
                (:vat-id :string ,(s-prefix "gr:vatID")))
  :has-one `((concept :via ,(s-prefix "elod:countryIsoCode")
                      :as "country"))	 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Persons/")
  :on-path "people")

(define-resource organization-status ()
  :class (s-prefix "elod:OrganizationStatus") 
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))		 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/OrganizationStatus/")
  :on-path "organization-statuses")

(define-resource organization-category ()
  :class (s-prefix "elod:OrganizationCategory") 
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/OrganizationCategory/")
  :on-path "organization-categories")

(define-resource role ()
  :class (s-prefix "org:Role") 
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))		 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Role/")
  :on-path "roles")

(define-resource organization-domain ()
  :class (s-prefix "elod:OrganizationDomain") 
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-many `((concept :via ,(s-prefix "skos:broader")
                       :as "broader-concepts"))  
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/OrganizationDomain/")
  :on-path "organization-domains")

(define-resource organizational-unit-category ()
  :class (s-prefix "elod:OrganizationalUnitCategory") 
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))		 
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/ontology#OrganizationalUnitCategory")
  :on-path "organizational-unit-categories")

(define-resource vat-type ()
  :class (s-prefix "elod:VatType") 
  :properties `((:label :string ,(s-prefix "skos:prefLabel"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))		 
  :features '(include-uri)
  :resource-base (s-url "ttp://linkedeconomy.org/ontology#VatType")
  :on-path "vat-types")

(define-resource country ()                												
  :class (s-prefix "elod:Country") 
  :properties `((:comment :string ,(s-prefix "rdfs:comment"))
                (:same-as :uri ,(s-prefix "owl:sameAs"))  				;sameAs-URI?? or add in the has-many section?
                (:depiction :string ,(s-prefix "foaf:depiction"))
                (:label :string ,(s-prefix "skos:prefLabel"))
                (:name :string ,(s-prefix "foaf:name"))
                (:hdi-notes :string ,(s-prefix "fao:HDINotes"))
                (:hdi-total :string ,(s-prefix "fao:HDITotal"))
                (:code-agrovoc :string ,(s-prefix "fao:codeAGROVOC"))
                (:code-faostat :string ,(s-prefix "fao:codeFAOSTAT"))
                (:code-faoterm :string ,(s-prefix "fao:codeFAOTERM"))
                (:code-gaul :string ,(s-prefix "fao:codeGAUL"))
                (:code-iso2 :string ,(s-prefix "fao:codeISO2"))
                (:code-iso3 :string ,(s-prefix "fao:codeISO3"))
                (:code-un :string ,(s-prefix "fao:codeUN"))
                (:code-undp :string ,(s-prefix "fao:codeUNDP"))
                (:has-max-latitude :string ,(s-prefix "fao:hasMaxLatitude"))
                (:has-max-longitude :string ,(s-prefix "fao:hasMaxLongitude"))
                (:has-min-latitude :string ,(s-prefix "fao:hasMinLatitude"))
                (:has-min-longitude :string ,(s-prefix "fao:hasMinLongitude"))
                (:valid-until :string ,(s-prefix "fao:validUntil"))
                (:founding-date :datetime ,(s-prefix "dbo:foundingDate"))
                (:notation :string ,(s-prefix "skos:notation"))
                (:alt-label :string ,(s-prefix "skos:altLabel"))
                (:dbpedia-id-code :string ,(s-prefix "fao:codeDBPediaID"))
                (:percentage-of-water :string ,(s-prefix "dbo:percentageOfAreaWater"))
                (:country-id :string, (s-prefix "elod:countryId"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf"))
                ;;(:is-in-group :uri ,(s-prefix "fao:isInGroup"))
                ;;No need to define it, not our data
                ;;(:is-successor-of :uri ,(s-prefix "fao:isSuccessorOf"))					
                ;;No need to define it, not our data
                (:nationality :string ,(s-prefix "fao:nationality")))
  :has-one `((concept-scheme :via ,(s-prefix "skos:inScheme")
                             :as "in-concept-scheme")
             (concept :via ,(s-prefix "elod:hasCurrency")
                      :as "has-currency")
             (country :via ,(s-prefix "fao:isPredecessorOf")
                      :as "is-predecessor-of")
             (country :via ,(s-prefix "fao:isAdministeredBy")
                      :as "is-administered-by")
             (concept :via ,(s-prefix "elod:inDevelopmentRegion")
                      :as "in-development-region"))				
  :has-many `((country :via ,(s-prefix "fao:hasBorderWith")
                       :as "borders-with")
              (concept :via ,(s-prefix "dbo:language")
                       :as "languages")
              (concept :via ,(s-prefix "elod:hasNaturalResource")
                       :as "natural-resources")
              (concept :via ,(s-prefix "elod:hasAgriculturalProduct")
                       :as "agricultural-products")
              (concept :via ,(s-prefix "elod:hasIndustry")
                       :as "industries")
              (statistical-indicator :via ,(s-prefix "elod:hasStatisticalIndicator")
                                     :as "statistical-indicators")
              (financial-indicator :via ,(s-prefix "elod:hasFinancialIndicator")
                                   :as "financial-indicators"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Country/")
  :on-path "countries") 

(define-resource financial-indicator ()                												
  :class (s-prefix "elod:FinancialIndicator") 
  :properties `((:financial-year :g-year, (s-prefix "elod:financialYear"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((concept :via ,(s-prefix "elod:concerns")                                                    
                      :as "concerns")
             (amount :via ,(s-prefix "elod:amount")                                                    
                     :as "amount"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/FinancialIndicator/")
  :on-path "financial-indicators")

(define-resource attachment ()                												
  :class (s-prefix "elod:Attachment") 
  :properties `((:sum :string, (s-prefix "elod:attachmentChecksum"))
                (:description :string, (s-prefix "elod:attachmentDescription"))
                (:file-name :string, (s-prefix "elod:attachmentFilename"))
                (:id :string, (s-prefix "elod:attachmentId"))
                (:mime-type :string, (s-prefix "elod:attachmentMimeType"))
                ;;(:size :string, (s-prefix "elod:attachmentSize")) ->  error 500 here
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Attachment/")
  :on-path "attachments") 

(define-resource feature ()                												
  :class (s-prefix "geosparql:Feature") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((geometry :via ,(s-prefix "geosparql:hasGeometry")                                                    
                       :as "geometry"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Feature/")
  :on-path "features") 

(define-resource geometry ()                												
  :class (s-prefix "geosparql:Geometry") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf"))
		(:coordinates :geometry, (s-prefix "geosparql:asWKT")))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Geometry/")
  :on-path "geometries") 

(define-resource aggregate () 
  :class (s-prefix "elod:Aggregate") 
  :properties `((:is-part-of :uri ,(s-prefix "dct:isPartOf"))
		(:aggregated-amount :string, (s-prefix "elod:aggregatedAmount")))
  :has-one `((concept :via ,(s-prefix "elod:hasCurrency")                                                    
                      :as "currency"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/Aggregate/")
  :on-path "aggregates") 

(define-resource non-financial-indicators () 
  :class (s-prefix "elod:NonFinancialIndicator") 
  :properties `((:financial-year :g-year, (s-prefix "elod:financialYear"))
                (:value :g-year, (s-prefix "elod:hasValue"))
                (:is-part-of :uri ,(s-prefix "dct:isPartOf")))
  :has-one `((concept :via ,(s-prefix "elod:concerns")                                                    
                      :as "concerns"))
  :features '(include-uri)
  :resource-base (s-url "http://linkedeconomy.org/resource/NonFinancialIndicator/")
  :on-path "non-financial-indicators") 
